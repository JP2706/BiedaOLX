@model AnnouncementViewModel

@{
    ViewData["Title"] = Model.Heading;
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-12">
        @using (Html.BeginForm("Announcement", "Announcement" ,FormMethod.Post ,new {@enctype="multipart/form-data"}))
        {
            //@Html.ValidationSummary()
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Announcement.CreatedDate)
            @Html.HiddenFor(x => x.Announcement.Id)
            
            <div class="form-group">
                @Html.LabelFor(x => x.Announcement.Title)
                @Html.TextBoxFor(x => x.Announcement.Title, new {@class = "form-control", autofocus = "autofocus"})
                @Html.ValidationMessageFor(x => x.Announcement.Title)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Announcement.CategoryId)
                @Html.DropDownListFor(x => x.Announcement.CategoryId,
                         new SelectList(Model.Categories, "Id", "Name"), "-- wybierz kategorię --",
                         new { @class = "form-control mb-2" })
                @* @Html.ValidationMessageFor(x => x.Announcement.CategoryId) *@
            </div>

            <div class="form-group">
                <input type="file" name="userFile"/>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Announcement.Body)
                @Html.TextAreaFor(x => x.Announcement.Body, new { @class = "form-control", rows = 12 })
                @Html.ValidationMessageFor(x => x.Announcement.Body)
            </div>
            <div class="form-row">
                <div class="form-group mr-2">
                    @Html.LabelFor(x => x.Announcement.Street)
                    @Html.TextBoxFor(x => x.Announcement.Street, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Announcement.Street)
                </div>

                <div class="form-group mr-2">
                    @Html.LabelFor(x => x.Announcement.StreetNumer)
                    @Html.TextBoxFor(x => x.Announcement.StreetNumer, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Announcement.StreetNumer)
                </div>

                <div class="form-group mr-2">
                    @Html.LabelFor(x => x.Announcement.PostCode)
                    @Html.TextBoxFor(x => x.Announcement.PostCode, new { @class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Announcement.PostCode)
                </div>

                <div class="form-group mr-2">
                    @Html.LabelFor(x => x.Announcement.City)
                    @Html.TextBoxFor(x => x.Announcement.City, new { @class = "form-control"})
                    @Html.ValidationMessageFor(x => x.Announcement.City)
                </div>

            </div>
            <div class="form-row">
                <div class="form-group mr-2">
                    @Html.LabelFor(x => x.Announcement.NotOrUsedId)
                    @Html.DropDownListFor(x => x.Announcement.NotOrUsedId,
                             new SelectList(Model.NotOrUseds, "Id", "Name"), "-- wybierz stan --",
                             new { @class = "form-control mb-2" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Announcement.Value)
                    @Html.TextBoxFor(x => x.Announcement.Value, new { @class = "form-control"})
                    @* @Html.ValidationMessageFor(x => x.Announcement.Value) *@
                </div>
                

            </div>
            
            
            <button type="submit" class="btn btn-primary mt-3">Dodaj</button>
            @if(Model.Announcement.Id != 0)
            {
                <button class="btn btn-danger mt-3 ml-2" type="button" onclick='window.location.href="/Identity/Account/Manage/MyAnnouncements"'>Anuluj</button>
            }
        }

        
    </div>
</div>


